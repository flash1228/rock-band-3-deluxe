#define DX_GEMTRACKDIR
;must be used in beatmatch foreach $player, used for find_obj
({{get_track_panel} loaded_dir} {sprint "track_" {{$player get_user} get_slot_num}})
{func
   dx_set_song_speed
   ;{dx_log_writer info {sprint "func: dx_set_song_speed"}}
   ;{dx_log_writer info
   ;   {sprintf "Executed dx_set_song_speed - time: %.4fms"
   ;      {time
            {if {exists gamemode}
               {dx_log_writer beatmatch {sprint "Setting up song speeds. Song Speed: " $speedmod}} ;runs in beatmatcher, do not enable under penalty of stutter
               {unless
                  {|| ;check for a variety of game modes where song speed is not allowed to be adjusted
                     {gamemode in_mode pro_song_lessons_keyboard}
                     {gamemode in_mode pro_song_lessons_real_guitar}
                     {gamemode in_mode pro_song_lessons_real_bass}
                     {gamemode in_mode drum_freestyle}
                     {gamemode in_mode trainer}
                     {gamemode in_mode trainer_drums}
                     {gamemode in_mode trainer_pro_drums}
                     {gamemode in_mode trainer_real_guitar}
                     {gamemode in_mode trainer_pro_keyboard}
                     #ifdef HX_XBOX {gamemode in_mode audition} #endif ;audition is xbox only, ps3 will crash if you check for it
                     {&& {gamemode in_mode practice} {> {gamecfg get practice_speed} 0}}
                  }
                  {unless {session_mgr is_local}
                     {if {is_leader_local}
                        {session send_msg_to_all {` (beatmatch set_music_speed {, $speedmod}) kNetReliable}}
                     }
                  }
                  {beatmatch set_music_speed $speedmod} ;apply the current selected speed in game
               }
               {if {&& {gamemode in_mode practice} {> {gamecfg get practice_speed} 0}}
                  {practice_panel update_speed {gamecfg get practice_speed}}
               }
            }
   ;      }
   ;   }
   ;}
}