{push_back $dx_settings_main
   (dxState_Advanced
      (view
         #ifndef HX_WII os_menu_options #endif
         os_functional_options
         os_pedantic_settings
         {if_else {session_mgr is_local}
            os_debug
            0
         }
         #ifdef HX_XBOX
         #ifdef RB3E
         #ifndef RB3E_EMULATOR
         os_reboot
         #endif
         #endif
         #endif
      )
      (select
         (os_menu_options {dx_state dxState_MenuOptions})
         (os_pedantic_settings {dx_state dxState_WhoCares})
         (os_functional_options {dx_state dxState_FunctionalOptions})
         (os_debug
            ;{if_else $dx_debug_first
            ;   {dx_state dxState_DebugWarn}
               {dx_state dxState_Debug}
            ;}
         )
         (os_reboot {dx_state dxState_RebootWarn})
      )
      (cancel {dx_state dxState_DeluxeSettings})
   )
}
{push_back $dx_settings_main
   (dxState_MenuOptions
      #define SET_STRIP_COLOR
      (
         {platform_color.mat set color {pack_color $dx_menu_color_r $dx_menu_color_g $dx_menu_color_b}}
      )
      (view
         #ifndef HX_WII
         {if_else $dx_song_select_rings os_song_rings_on os_song_rings_off}
         {if_else $dx_more_info_toggle os_more_info_toggle_on os_more_info_toggle_off}
         {switch $dx_instrument_icons
            (rb3 os_icons_rb3)
            (rb4 os_icons_rb4)
         }
         #endif
      )
      (enter
         SET_STRIP_COLOR
      )
      (scroll
         SET_STRIP_COLOR
      )
      (select
         (os_song_rings
            {set $dx_song_select_rings {! $dx_song_select_rings}}
            {if {== {ui current_screen} song_select_screen}
               {song_select_panel refresh_selected_song}
            }
         )
         (os_more_info_toggle
            {set $dx_more_info_toggle {! $dx_more_info_toggle}}
            {if {== {ui current_screen} song_select_screen}
               {song_select_panel refresh_selected_song}
            }
         )
         (os_icons_rb3
            {set $dx_instrument_icons rb4}
            {set $dx_tracked_changed os_icons_rb4}
            {set $dx_icon_guitar "C"}
            {set $dx_icon_bass "T"}
            {set $dx_icon_drum "E"}
            {set $dx_icon_vocals "I"}
            {set $dx_icon_harmony_2 "c"}
            {set $dx_icon_harmony_3 "e"}
            {set $dx_icon_keys "t"}
            {set $dx_icon_real_keys "i"}
            {set $dx_icon_real_guitar "U"}
            {set $dx_icon_real_bass "A"}
            {set $dx_icon_drum_pro "R"}
         )
         (os_icons_rb4
            {set $dx_instrument_icons rb3}
            {set $dx_tracked_changed os_icons_rb3}
            {set $dx_icon_guitar "G"}
            {set $dx_icon_bass "B"}
            {set $dx_icon_drum "D"}
            {set $dx_icon_vocals "V"}
            {set $dx_icon_harmony_2 "2"}
            {set $dx_icon_harmony_3 "3"}
            {set $dx_icon_keys "K"}
            {set $dx_icon_real_keys "k"}
            {set $dx_icon_real_guitar "g"}
            {set $dx_icon_real_bass "b"}
            {set $dx_icon_drum_pro "d"}
         )
      )
      (cancel
         {dx_state dxState_Advanced}
         SET_STRIP_COLOR
      )
   )
}
{push_back $dx_settings_main
   (dxState_MenuTheme
      (view
         os_rb3_menu_theme
         os_rb4_menu_theme
         os_rivals_menu_theme
      )
      (select
         (os_rb3_menu_theme
            {set $dx_overshell_theme none}
            OVERSHELL_RB3OS
            {overshell update_all}
         )
         (os_rb4_menu_theme
            {set $dx_overshell_theme rb4}
            OVERSHELL_RB4OS
            {overshell update_all}
         )
         (os_rivals_menu_theme
            {set $dx_overshell_theme rivals}
            OVERSHELL_RIVALSOS
            {overshell update_all}
         )
         
      )
      (cancel {dx_state dxState_MenuThemer})
   )
}
{push_back $dx_settings_main
   (dxState_MenuColor
      (message pos_remap_desc)
      (view
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 0}} os_blnk os_reset_color}
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 1} {!= $dx_list_pos 0}} os_blnk {sprintf {localize os_menu_color_r} {int {+ 0.5 {* $dx_menu_color_r 100}}}}}
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 2} {!= $dx_list_pos 0}} os_blnk {sprintf {localize os_menu_color_g} {int {+ 0.5 {* $dx_menu_color_g 100}}}}}
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 3} {!= $dx_list_pos 0}} os_blnk {sprintf {localize os_menu_color_b} {int {+ 0.5 {* $dx_menu_color_b 100}}}}}
      )
      #define LIST_DIREC
      (
         {if {!= {$current_list selected_data} 0}
            {switch {$current_list selected_data}
               (1 {set $this_var dx_menu_color_r})
               (2 {set $this_var dx_menu_color_g})
               (3 {set $this_var dx_menu_color_b})
            }
            ;actually set our variable, based on the pressed action
            {switch $action
               ((kAction_Left kAction_Down)
                  {if {> {eval {var {sprint $this_var}}} 0.04}
                     {set_var {sprint $this_var} {- {eval {var $this_var}} 0.05}}
                  }
               )
               ((kAction_Right kAction_Up)
                  {if {< {eval {var {sprint $this_var}}} 0.96}
                     {set_var {sprint $this_var} {+ {eval {var $this_var}} 0.05}}
                  }
               )
            }
            SET_STRIP_COLOR
            ;track our current list position for hiding other list elements while we have selected this one
            {set $dx_list_pos {$current_list selected_data}}
         }
      )
      ;this is handling the dynamic "slider" replacement
      (button
         ;we selected an object so now only track up/down
         (kAction_Confirm
            {if_else $dx_list_item_selected
               {set $dx_list_item_selected FALSE}
               ;check if we are selecting on the special item that drills down a level
               {do
                  {switch {$current_list selected_data}
                     (0
                        #ifdef HX_WII
                        ;{set $dx_menu_color_r 30} {set $dx_menu_color_g 190} {set $dx_menu_color_b 196}
                        {set $dx_menu_color_r 0.10} {set $dx_menu_color_g 0.75} {set $dx_menu_color_b 0.75}
                        #endif
                        #ifdef HX_PS3
                        ;{set $dx_menu_color_r 197} {set $dx_menu_color_g 8} {set $dx_menu_color_b 1}
                        {set $dx_menu_color_r 0.75} {set $dx_menu_color_g 0.05} {set $dx_menu_color_b 0.00}
                        #endif
                        #ifdef HX_XBOX
                        ;{set $dx_menu_color_r 92} {set $dx_menu_color_g 195} {set $dx_menu_color_b 5}
                        {set $dx_menu_color_r 0.35} {set $dx_menu_color_g 0.75} {set $dx_menu_color_b 0.00}
                        #endif
                        SET_STRIP_COLOR
                     )
                     (1
                        ;refresh the list but this time tell the game we are a level deeper to hide other options
                        {set $dx_list_item_selected TRUE}
                        {set $dx_list_pos {$current_list selected_data}}
                     )
                     (2
                        ;refresh the list but this time tell the game we are a level deeper to hide other options
                        {set $dx_list_item_selected TRUE}
                        {set $dx_list_pos {$current_list selected_data}}
                     )
                     (3
                        ;refresh the list but this time tell the game we are a level deeper to hide other options
                        {set $dx_list_item_selected TRUE}
                        {set $dx_list_pos {$current_list selected_data}}
                     )
                     kDataUnhandled
                  }
               }
            }
         )
         (kAction_Cancel
            {if_else $dx_list_item_selected
               {set $dx_list_item_selected FALSE}
               {dx_state dxState_MenuThemer}
            }
         )
         ;if we pressed Up or Down while inside a selected list item
         (kAction_Down LIST_DIREC)
         (kAction_Up LIST_DIREC)
         ;if we pressed left or right while hovering on a specific list item
         (kAction_Left LIST_DIREC)
         (kAction_Right LIST_DIREC)
      )
   )
}
{push_back $dx_settings_main
   (dxState_FunctionalOptions
      (view
         #ifndef HX_WII
         {if_else $dx_prompt_save os_prompt_save_on os_prompt_save_off}
         #endif
         {switch $dx_mic_deploy_sens 
            (0.9 os_dx_mic_od_1)
            (0.7 os_dx_mic_od_2)
            (0.5 os_dx_mic_od_3)
            (0.3 os_dx_mic_od_4)
            (0.1 os_dx_mic_od_5)
            os_dx_mic_od_unknown
         }
         {if_else $dx_additional_parts os_additional_parts_on os_additional_parts_off}
         ;{if_else $dx_song_delay os_songdelay_on os_songdelay_off}
         #ifndef HX_WII
         {switch $dx_current_intro_movie
            (deluxe os_intro_deluxe)
            (vanilla os_intro_vanilla)
            (off os_intro_off)
         }
         {if_else $dx_splash_screen os_splash_on os_splash_off}
         ;remove high song count warn
         ;{if_else $dx_confirm_song_count os_confirm_songcount_on os_confirm_songcount_off}
         #ifdef RB3E
         {switch $dx_connected_server
            (none os_server_online)
            (live os_server_live)
            (liveless os_server_liveless)
         }
         #endif
         #endif
      )
      (select
         (os_prompt_save {set $dx_prompt_save {! $dx_prompt_save}})
         #define MIC_OD_LIST
         (
            {set $dx_mic_deploy_sens
               {switch $dx_mic_deploy_sens
                  (0.9 0.7)
                  (0.7 0.5)
                  (0.5 0.3)
                  (0.3 0.1)
                  (0.1 0.9)
                  0.9
               }
            }
         )
         (os_dx_mic_od_1 MIC_OD_LIST)
         (os_dx_mic_od_2 MIC_OD_LIST)
         (os_dx_mic_od_3 MIC_OD_LIST)
         (os_dx_mic_od_4 MIC_OD_LIST)
         (os_dx_mic_od_5 MIC_OD_LIST)
         (os_dx_mic_od_unkown MIC_OD_LIST)
         (os_additional_parts {set $dx_additional_parts {! $dx_additional_parts}})
         (os_songdelay {set $dx_song_delay {! $dx_song_delay}})
         (os_intro_deluxe {set $dx_current_intro_movie vanilla})
         (os_intro_vanilla {set $dx_current_intro_movie off})
         (os_intro_off {set $dx_current_intro_movie deluxe})
         (os_splash {set $dx_splash_screen {! $dx_splash_screen}})
         (os_server_online {set $dx_connected_server live})
         (os_server_live {set $dx_connected_server liveless})
         (os_server_liveless {set $dx_connected_server none})
         (os_confirm_songcount {set $dx_confirm_song_count {! $dx_confirm_song_count}})
      )
      (cancel
         {dx_state dxState_Advanced}
      )
   )
}
{push_back $dx_settings_main
   (dxState_LogSettings
      (view
         os_logging_disable_all
         {if_else $dx_logging_essential os_logging_essential_on os_logging_essential_off}
         {if_else $dx_logging_default os_logging_default_on os_logging_default_off}
         {if_else $dx_logging_info os_logging_info_on os_logging_info_off}
         {if_else $dx_logging_insane os_logging_insane_on os_logging_insane_off}
         {if_else $dx_logging_beatmatch os_logging_beatmatch_on os_logging_beatmatch_off}
         {if_else $dx_logging_countdown os_logging_countdown_on os_logging_countdown_off}
      )
      (select
         (os_logging_disable_all
            {set $dx_logging_essential FALSE}
            {set $dx_logging_default FALSE}
            {set $dx_logging_info FALSE}
            {set $dx_logging_insane FALSE}
            {set $dx_logging_beatmatch FALSE}
            {set $dx_logging_countdown FALSE}
         )
         (os_logging_essential {set $dx_logging_essential {! $dx_logging_essential}})
         (os_logging_default {set $dx_logging_default {! $dx_logging_default}})
         (os_logging_info {set $dx_logging_info {! $dx_logging_info}})
         (os_logging_insane {set $dx_logging_insane {! $dx_logging_insane}})
         (os_logging_beatmatch {set $dx_logging_beatmatch {! $dx_logging_beatmatch}})
         (os_logging_countdown {set $dx_logging_countdown {! $dx_logging_countdown}})
      )
      (cancel {dx_state dxState_Debug})
   )
}
{push_back $dx_settings_main
   (dxState_Debug
      #ifdef HX_XBOX
      #define DX_SONGS_UPDATES_FILE_PATH
      (
         {sprint "GAME:/songs_updates.dta"}
      )
      #endif
      #ifdef HX_PS3
      #define DX_SONGS_UPDATES_FILE_PATH
      (
         {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/songs_updates.dta"}
      )
      #endif
      #ifdef HX_WII
      #define DX_SONGS_UPDATES_FILE_PATH
      (
         {sprint "songs_updates.dta"}
      )
      #endif
      #ifdef HX_XBOX
      #define DX_ACE_PATH
      (
         {sprint "GAME:/ace.dta"}
      )
      #endif
      #ifdef HX_PS3
      #define DX_ACE_PATH
      (
         {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/ace.dta"}
      )
      #endif
      #ifdef HX_WII
      #ifdef RB3E_EMULATOR
      #define DX_ACE_PATH
      (
         {sprint "nand/ace.dta"}
      )
      #else
      #define DX_ACE_PATH
      (
         {sprint "sd:/rb3/ace.dta"}
      )
      #endif
      #endif
      (view
         os_debug_mode
         os_milo
         os_logging
         #ifdef HX_PS3
         {if_else {file_exists DX_HI_MEM_PATH}
            {if_else {> {size {read_file DX_HI_MEM_PATH}} 0}
               {if_else {== {elem {find {read_file DX_HI_MEM_PATH} dx_high_memory} 1} 190000000}
                  os_dx_himem_on
                  os_dx_himem_off
               }
               os_dx_himem_off
            }
            os_dx_himem_off
         }
         #endif
         do_script
         os_uptime
         os_dumplyrics
         os_dumproot
         os_dumproot2
         print_hmx
         print_objects
         print_platform
         {if_else $dx_time_remain_dbg os_time_remain_dbg_on os_time_remain_dbg_off}
         {if_else $dx_judgment_dbg os_judgment_dbg_on os_judgment_dbg_off}
         os_cycleaspect
      )
      #ifdef HX_PS3
      (enter
         {if $dx_write_hi_mem
            {set $dx_write_hi_mem FALSE}
            {write_file DX_HI_MEM_PATH
               {array
                  (
                     (dx_high_memory 190000000)
                     (dx_song_count 16000)
                  )
               }
            }
         }
      )
      #endif
      (select
         (os_debug_mode
            {set $dx_debug FALSE}
            {dx_state dxState_Advanced}
         )
         (os_milo
            {dx_state dxState_MiloPanels})
         (os_uptime
            {dx_uptime_onscreen}
         )
         (print_hmx
            {print_hmx_panel}
         )
         (os_dumplyrics
            #ifdef HX_PS3
               {write_file {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/lyrics.dta"} $dx_lyric_display_phrases}
            #endif
            #ifdef HX_XBOX
               {write_file "GAME:/lyrics.dta" $dx_lyric_display_phrases}
            #endif
         )
         (os_dumproot
            #ifdef HX_PS3
            {write_file {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/rootarray.dta"} $syscfg}
            #endif
            #ifdef HX_XBOX
            {write_file "GAME:/rootarray.dta" $syscfg}
            #endif
            {dx_passive_messenger rootarray_dumped}
         )
         (os_dumproot2
            {foreach $array $syscfg
               #ifdef HX_PS3
               {write_file {sprint "GD:/dev_hdd0/game/" DX_TITLE_ID "/USRDIR/dx_debug/" {elem $array 0} ".dta"} $array}
               #endif
               #ifdef HX_XBOX
               {write_file {sprint "GAME:/dx_debug/" {elem $array 0} ".dta"} $array}
               #endif
            }
            {dx_passive_messenger rootarray_dumped2}
         )
         (os_time_remain_dbg {set $dx_time_remain_dbg {! $dx_time_remain_dbg}})
         (os_judgment_dbg {set $dx_judgment_dbg {! $dx_judgment_dbg}})
         (generate_updates_dta
            {set $tempwrite {find_exists $syscfg missing_song_data}}
            {foreach $entry {read_file "dx/song_updates/songs_yarg.dta"}
               {push_back $tempwrite $entry}
            }
            {write_file DX_SONGS_UPDATES_FILE_PATH $tempwrite}
            {set $tempwrite FALSE}
            {dx_passive_messenger songs_updates_generated}
         )
         (print_platform
            {dx_passive_messenger_symbol {sprintf "%s" {localize $dx_detected_platform}}}
         )
         (do_script
            {run DX_ACE_PATH}
         )
         (print_objects {dx_print_objects})
         (os_logging {dx_state dxState_LogSettings})
         (os_dx_himem_off {dx_state dxState_HimemWarn})
         (os_dx_himem_on
            {write_file 
               {array
                  (
                     (dx_high_memory 131000000)
                     (dx_song_count 8000)
                  )
               }
            }
         )
         (os_cycleaspect {dx_cycle_aspect})
      )
      (cancel
         {dx_state dxState_Advanced}
      )
   )
}
{push_back $dx_settings_main
   (dxState_PositionRemapper
      (view
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 0}} os_blnk os_reset}
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 1}} os_blnk {sprint "pos_interval_" $dx_pos_remapper_array_number}}
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 2}} os_blnk {sprint {localize os_horizontal} ": " $dx_set_ui_pos_0}}
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 3}} os_blnk {sprint {localize os_vertical}  ": " $dx_set_ui_pos_2}}
         {if_else {&& $dx_list_item_selected {!= $dx_list_pos 4}} os_blnk {sprint {localize os_zspace}  ": " $dx_set_ui_pos_1}}
      )
      (message pos_remap_desc)
      #define DX_TRANSLATE_POS_VARIABLES_TO_LOCAL
      (
         {switch $dx_set_ui_pos_tracked_ui
            (mtv
               {set $dx_set_ui_pos_0 $dx_mtv_pos_x}
               {set $dx_set_ui_pos_1 $dx_mtv_pos_z}
               {set $dx_set_ui_pos_2 $dx_mtv_pos_y}
            )
            (speed_control
               {set $dx_set_ui_pos_0 $speed_controlpos_0}
               {set $dx_set_ui_pos_1 $speed_controlpos_1}
               {set $dx_set_ui_pos_2 $speed_controlpos_2}
            )
            (all_item
               {set $dx_set_ui_pos_0 $all_itempos_0}
               {set $dx_set_ui_pos_1 $all_itempos_1}
               {set $dx_set_ui_pos_2 $all_itempos_2}
            )
            (score
               {set $dx_set_ui_pos_0 $scorepos_0}
               {set $dx_set_ui_pos_1 $scorepos_1}
               {set $dx_set_ui_pos_2 $scorepos_2}
            )
            (section
               {set $dx_set_ui_pos_0 $sectionpos_0}
               {set $dx_set_ui_pos_1 $sectionpos_1}
               {set $dx_set_ui_pos_2 $sectionpos_2}
            )
            (crowd_meter
               {set $dx_set_ui_pos_0 $crowd_meterpos_0}
               {set $dx_set_ui_pos_1 $crowd_meterpos_1}
               {set $dx_set_ui_pos_2 $crowd_meterpos_2}
            )
            (scoreboard
               {set $dx_set_ui_pos_0 $scoreboardpos_0}
               {set $dx_set_ui_pos_1 $scoreboardpos_1}
               {set $dx_set_ui_pos_2 $scoreboardpos_2}
            )
            (star_display
               {set $dx_set_ui_pos_0 $dx_score_base_0}
               {set $dx_set_ui_pos_1 $dx_score_base_1}
               {set $dx_set_ui_pos_2 $dx_score_base_2}
            )
            (solo_box
               {set $dx_set_ui_pos_0 $solo_boxpos_0}
               {set $dx_set_ui_pos_1 $solo_boxpos_1}
               {set $dx_set_ui_pos_2 $solo_boxpos_2}
            )
            (highway_overdrive_text
               {set $dx_set_ui_pos_0 $dx_track_overdrive_x}
               {set $dx_set_ui_pos_1 $dx_track_overdrive_z}
               {set $dx_set_ui_pos_2 $dx_track_overdrive_y}
            )
            (highway_streak_text
               {set $dx_set_ui_pos_0 $dx_track_streak_x}
               {set $dx_set_ui_pos_1 $dx_track_streak_z}
               {set $dx_set_ui_pos_2 $dx_track_streak_y}
            )
            (highway_username_text
               {set $dx_set_ui_pos_0 $dx_track_username_x}
               {set $dx_set_ui_pos_1 $dx_track_username_z}
               {set $dx_set_ui_pos_2 $dx_track_username_y}
            )
            kDataUnhandled
         }
         {if $findme
            {set $dx_set_ui_pos_0 {$findme get_local_pos_index 0}}
            {set $dx_set_ui_pos_1 {$findme get_local_pos_index 1}}
            {set $dx_set_ui_pos_2 {$findme get_local_pos_index 2}}
         }
      )
      #define DX_RESET_HUD_AXIS_POS
      (
         {switch $dx_set_ui_pos_tracked_ui
            (mtv {set $dx_set_ui_pos_0 16.80})
            (speed_control {set $dx_set_ui_pos_0 46})
            (all_item {set $dx_set_ui_pos_0 0})
            (score {set $dx_set_ui_pos_0 191})
            (section {set $dx_set_ui_pos_0 0})
            (scoreboard {set $dx_set_ui_pos_0 8})
            (star_display {set $dx_set_ui_pos_0 0})
            (solo_box {set $dx_set_ui_pos_0 0})
            (highway_overdrive_text {set $dx_set_ui_pos_0 0})
            (highway_streak_text {set $dx_set_ui_pos_0 2})
            (highway_username_text {set $dx_set_ui_pos_0 0})
         }
         {switch $dx_set_ui_pos_tracked_ui
            (mtv {set $dx_set_ui_pos_1 57})
            (speed_control {set $dx_set_ui_pos_1 0})
            (all_item {set $dx_set_ui_pos_1 0})
            (score {set $dx_set_ui_pos_1 0})
            (section {set $dx_set_ui_pos_1 0})
            (scoreboard {set $dx_set_ui_pos_1 0})
            (star_display {set $dx_set_ui_pos_1 0})
            (solo_box {set $dx_set_ui_pos_1 0})
            (highway_overdrive_text {set $dx_set_ui_pos_1 -5})
            (highway_streak_text {set $dx_set_ui_pos_1 -5})
            (highway_username_text {set $dx_set_ui_pos_1 0})
         }
         {switch $dx_set_ui_pos_tracked_ui
            (mtv {set $dx_set_ui_pos_2 13.78})
            (speed_control {set $dx_set_ui_pos_2 -5})
            (all_item {set $dx_set_ui_pos_2 0})
            (score {set $dx_set_ui_pos_2 175})
            (section {set $dx_set_ui_pos_2 185})
            (scoreboard {set $dx_set_ui_pos_2 -16})
            (star_display {set $dx_set_ui_pos_2 0})
            (solo_box {set $dx_set_ui_pos_2 0})
            (highway_overdrive_text {set $dx_set_ui_pos_2 -2.5})
            (highway_streak_text {set $dx_set_ui_pos_2 -2})
            (highway_username_text {set $dx_set_ui_pos_2 -5.5})
         }
      )

      #define DX_APPLY_POSITION_HUD
      (
         {switch $dx_set_ui_pos_tracked_ui
            (mtv
               {set $dx_mtv_pos_x $dx_set_ui_pos_0}
               {set $dx_mtv_pos_z $dx_set_ui_pos_1}
               {set $dx_mtv_pos_y $dx_set_ui_pos_2}
               {if $dx_mtvup
                  {{{gamemode get track_panel} find mtv_overlay} mtv_formatter}
               }
            )
            (speed_control
               {set $speed_controlpos_0 $dx_set_ui_pos_0}
               {set $speed_controlpos_1 $dx_set_ui_pos_1}
               {set $speed_controlpos_2 $dx_set_ui_pos_2}
               {if
                  {&&
                     {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                     {exists beatmatch}
                  }
                  {practice_panel dx_speed_control_set_pos}
               }
            )
            (all_item
               {set $all_itempos_0 $dx_set_ui_pos_0}
               {set $all_itempos_1 $dx_set_ui_pos_1}
               {set $all_itempos_2 $dx_set_ui_pos_2}
               {if
                  {&&
                     {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                     {exists beatmatch}
                  }
                  {practice_panel dx_all_item_set_pos}
               }
            )
            (score
               {set $scorepos_0 $dx_set_ui_pos_0}
               {set $scorepos_1 $dx_set_ui_pos_1}
               {set $scorepos_2 $dx_set_ui_pos_2}
               {if
                  {&&
                     {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                     {exists beatmatch}
                  }
                  {practice_panel dx_score_set_pos}
               }
            )
            (section
               {set $sectionpos_0 $dx_set_ui_pos_0}
               {set $sectionpos_1 $dx_set_ui_pos_1}
               {set $sectionpos_2 $dx_set_ui_pos_2}
               {if
                  {&&
                     {|| {gamemode in_mode practice} {gamemode in_mode qp_practice}}
                     {exists beatmatch}
                  }
                  {practice_panel dx_section_set_pos}
               }
            )
            (crowd_meter
               {set $crowd_meterpos_0 $dx_set_ui_pos_0}
               {set $crowd_meterpos_1 $dx_set_ui_pos_1}
               {set $crowd_meterpos_2 $dx_set_ui_pos_2}
               ;this doesnt do anything
            )
            (scoreboard
               {set $scoreboardpos_0 $dx_set_ui_pos_0}
               {set $scoreboardpos_1 $dx_set_ui_pos_1}
               {set $scoreboardpos_2 $dx_set_ui_pos_2}
               {if
                  {&&
                     {! {gamemode in_mode practice}}
                     {! {gamemode in_mode trainer}}
                     {exists beatmatch}
                  }
                  {dx_set_scoreboard_pos}
               }
            )
            (star_display
               {set $dx_score_base_0 $dx_set_ui_pos_0}
               {set $dx_score_base_1 $dx_set_ui_pos_1}
               {set $dx_score_base_2 $dx_set_ui_pos_2}
               {if
                  {&&
                     {! {gamemode in_mode practice}}
                     {! {gamemode in_mode trainer}}
                     {exists beatmatch}
                  }
                  {dx_set_star_display_pos}
                  {dx_set_scoreboard_pos}
                  {dx_fix_new_song_progress_pos}
               }
            )
            (solo_box
               {set $solo_boxpos_0 $dx_set_ui_pos_0}
               {set $solo_boxpos_1 $dx_set_ui_pos_1}
               {set $solo_boxpos_2 $dx_set_ui_pos_2}
               {if {&& {$this in_game} {! {gamemode in_mode trainer}}}
                  {beatmatch foreach_active_player $player
                     {dx_set_solo_box_pos $player $solo_boxpos_0 $solo_boxpos_1 $solo_boxpos_2}
                  }
               }
            )
            (highway_overdrive_text
               {set $dx_track_overdrive_x $dx_set_ui_pos_0}
               {set $dx_track_overdrive_z $dx_set_ui_pos_1}
               {set $dx_track_overdrive_y $dx_set_ui_pos_2}
               {if {&& {$this in_game} {! {gamemode in_mode trainer}}}
                  {beatmatch foreach_active_player $player
                     {dx_track_label_overdrive dx_track_label_overdrive $dx_track_overdrive_size $dx_track_overdrive_font $dx_track_overdrive_alignment $dx_track_overdrive_kerning {{$player get_user} get_slot_num} $dx_track_overdrive_x $dx_track_overdrive_y $dx_track_overdrive_r $dx_track_overdrive_g $dx_track_overdrive_b FALSE}
                  }
               }
            )
            (highway_streak_text
               {set $dx_track_streak_x $dx_set_ui_pos_0}
               {set $dx_track_streak_z $dx_set_ui_pos_1}
               {set $dx_track_streak_y $dx_set_ui_pos_2}
               {if {&& {$this in_game} {! {gamemode in_mode trainer}}}
                  {beatmatch foreach_active_player $player
                     {if {!= {$player instrument} vocals}
                        {dx_track_label_streak dx_track_label_streak $dx_track_streak_size $dx_track_streak_font $dx_track_streak_alignment $dx_track_streak_kerning {{$player get_user} get_slot_num} $dx_track_streak_x $dx_track_streak_y $dx_track_streak_r $dx_track_streak_g $dx_track_streak_b FALSE}
                     }
                  }
               }
            )
            (highway_username_text
               {set $dx_track_username_x $dx_set_ui_pos_0}
               {set $dx_track_username_z $dx_set_ui_pos_1}
               {set $dx_track_username_y $dx_set_ui_pos_2}
               {if {&& {$this in_game} {! {gamemode in_mode trainer}}}
                  {beatmatch foreach_active_player $player
                     {if {!= {$player instrument} vocals}
                        {dx_track_label dx_track_label_username $dx_track_username_size $dx_track_username_font $dx_track_username_alignment $dx_track_username_kerning {{$player get_user} get_slot_num} $dx_track_username_x $dx_track_username_y $dx_track_username_r $dx_track_username_g $dx_track_username_b FALSE}
                        {dx_show_track_username $dx_track_username $player}
                     }
                  }
               }
            )
            kDataUnhandled
         }
         {if $findme
            {$findme set_local_pos $dx_set_ui_pos_0 $dx_set_ui_pos_1 $dx_set_ui_pos_2}
         }
      )
      (exit
         {set $dx_list_pos 0}
         {set $dx_list_item_selected FALSE}
         {set $dx_pos_remapper_array_number 3}
      )
      (enter
         {set $dx_pos_interval_list (0.01 0.1 0.5 1 5 10 50 100)}
         {set $dx_pos_current_interval {elem $dx_pos_interval_list $dx_pos_remapper_array_number}} ;1 unit
         DX_TRANSLATE_POS_VARIABLES_TO_LOCAL
         {do
            ($arr {find $dx_settings_main $this_state view})
            ($data {array 0})
            {foreach $entry $arr
               {if {!= $entry view}
                  {push_back $data $entry}
               }
            }
            {$current_list set_data $data}
         }
      )
      #define LIST_POS_DIREC
      (
         {if {!= {$current_list selected_data} 0}
            {switch {$current_list selected_data}
               (1 {set $this_var dx_pos_remapper_array_number})
               (2 {set $this_var dx_set_ui_pos_0})
               (3 {set $this_var dx_set_ui_pos_2})
               (4 {set $this_var dx_set_ui_pos_1})
            }
            ;actually set our variable, based on the pressed action
            {switch $action
               ((kAction_Left kAction_Down)
                  {if_else {== $this_var dx_pos_remapper_array_number}
                     {if {> {eval {var {sprint $this_var}}} 0}
                        {set_var {sprint $this_var} {- {eval {var $this_var}} 1}}
                     }
                     {set_var {sprint $this_var} {- {eval {var $this_var}} $dx_pos_current_interval}}
                  }
               )
               ((kAction_Right kAction_Up)
                  {if_else {== $this_var dx_pos_remapper_array_number}
                     {if {< {eval {var {sprint $this_var}}} 7}
                        {set_var {sprint $this_var} {+ {eval {var $this_var}} 1}}
                     }
                     {set_var {sprint $this_var} {+ {eval {var $this_var}} $dx_pos_current_interval}}
                  }
               )
            }
            {if {== $this_var dx_pos_remapper_array_number}
               {set $dx_pos_current_interval {elem $dx_pos_interval_list $dx_pos_remapper_array_number}}
            }
            DX_APPLY_POSITION_HUD
            ;track our current list position for hiding other list elements while we have selected this one
            {set $dx_list_pos {$current_list selected_data}}
         }
      )
      (button
         (kAction_Confirm
            {if_else $dx_list_item_selected
               {set $dx_list_item_selected FALSE}
               {if_else {== {$current_list selected_data} 0} ;if we click reset
                  {do
                     DX_RESET_HUD_AXIS_POS
                     DX_APPLY_POSITION_HUD
                  }
                  {do
                     {set $dx_list_item_selected TRUE}
                     {set $dx_list_pos {$current_list selected_data}}
                  }
               }
            }
         )
         (kAction_Cancel
            {if_else $dx_list_item_selected
               {set $dx_list_item_selected FALSE}
               {dx_state
                  {switch $dx_set_ui_pos_tracked_ui
                     (mtv dxState_MTVElements)
                     (speed_control dxState_ScreenElements_Practice)
                     (all_item dxState_ScreenElements_Practice)
                     (score dxState_ScreenElements_Practice)
                     (section dxState_ScreenElements_Practice)
                     ;(crowd_meter dxState_CrowdMeterElements)
                     (scoreboard dxState_InGameHUD)
                     (star_display dxState_InGameHUD)
                     (solo_box dxState_InGameHUD)
                     (highway_username_text dxState_TrackHighwayUsername)
                     (highway_overdrive_text dxState_TrackHighwayOverdrive)
                     (highway_streak_text dxState_TrackHighwayStreak)
                     dxState_MiloFind
                  }
               }
            }
         )
         ;if we pressed Up or Down while inside a selected list item
         (kAction_Down LIST_POS_DIREC)
         (kAction_Up LIST_POS_DIREC)
         ;if we pressed left or right while hovering on a specific list item
         (kAction_Left LIST_POS_DIREC)
         (kAction_Right LIST_POS_DIREC)
      )
   )
}
{push_back $dx_settings_main
   (dxState_ChatSettings
      (view
         {sprintf "1: %s" $dx_chat_preset_0}
         {sprintf "2: %s" $dx_chat_preset_1}
         {sprintf "3: %s" $dx_chat_preset_2}
         {sprintf "4: %s" $dx_chat_preset_3}
         {sprintf "5: %s" $dx_chat_preset_4}
         {sprintf "6: %s" $dx_chat_preset_5}
         {sprintf "7: %s" $dx_chat_preset_6}
         {sprintf "8: %s" $dx_chat_preset_7}
      )
      (message os_pick_a_phrase)
      (button
         (kAction_Confirm
            {switch {$current_list selected_data}
               (0 {set $dx_selected_chat_index 0})
               (1 {set $dx_selected_chat_index 1})
               (2 {set $dx_selected_chat_index 2})
               (3 {set $dx_selected_chat_index 3})
               (4 {set $dx_selected_chat_index 4})
               (5 {set $dx_selected_chat_index 5})
               (6 {set $dx_selected_chat_index 6})
               (7 {set $dx_selected_chat_index 7})
            }
            {dx_state dxState_SelectChatPreset}
         )
      )
      (cancel {dx_state dxState_OnlineFeatures})
   )
}
{push_back $dx_settings_main
   (dxState_SelectChatPreset
      (view DX_QUICK_CHAT_PHRASES)
      (message 
         {sprintf {localize chat_this_option} {eval {var {sprint "dx_chat_preset_" $dx_selected_chat_index}}}}
      )
      (button
         (kAction_Confirm
            {switch $dx_selected_chat_index
               (0 {set $dx_chat_preset_0 {localize {$current_list selected_sym}}})
               (1 {set $dx_chat_preset_1 {localize {$current_list selected_sym}}})
               (2 {set $dx_chat_preset_2 {localize {$current_list selected_sym}}})
               (3 {set $dx_chat_preset_3 {localize {$current_list selected_sym}}})
               (4 {set $dx_chat_preset_4 {localize {$current_list selected_sym}}})
               (5 {set $dx_chat_preset_5 {localize {$current_list selected_sym}}})
               (6 {set $dx_chat_preset_6 {localize {$current_list selected_sym}}})
               (7 {set $dx_chat_preset_7 {localize {$current_list selected_sym}}})
            }
            {dx_state dxState_ChatSettings}
         )
      )
      (cancel {dx_state dxState_ChatSettings})
   )
}
{push_back $dx_settings_main
   (dxState_BotSettings
      (view
         os_dx_bot_skill
         {switch $dx_bot_overdrive 
            (dx_on os_dx_bot_overdrive_on)
            (dx_off os_dx_bot_overdrive_off)
            (dx_drain os_dx_bot_overdrive_drain)
         }
         {if_else $dx_auto_endgame os_dx_auto_endgame_on os_dx_auto_endgame_off}
         {switch $dx_auto_endurance 
            (dx_selected os_auto_endurance_selected)
            (dx_random os_auto_endurance_random)
            (FALSE os_auto_endurance_off)
         }
         {if_else $dx_insta_win os_insta_win_on os_insta_win_off}
         {if_else $dx_bot_1 os_dx_bot_1_on os_dx_bot_1_off}
         {if_else $dx_bot_2 os_dx_bot_2_on os_dx_bot_2_off}
         {if_else $dx_bot_3 os_dx_bot_3_on os_dx_bot_3_off}
         {if_else $dx_bot_4 os_dx_bot_4_on os_dx_bot_4_off}
         {if_else $dx_bot_5 os_dx_bot_5_on os_dx_bot_5_off}
      )
      (message none)
      (enter
         {set $dx_slider TRUE}
         {set $dx_slider_id dx_bot_skill}
         {set $in_slider_state TRUE}
         {instruments.sld set_num_steps 12}
         {instruments.sld set_current $dx_bot_skill}
         {if $dx_slider_item_selected
            {$current_list set_showing FALSE}
            {$this set_focus instruments.sld}
         }
      )
      (update_view
         {handle ($this update_slider instruments.sld "")}
      )
      (select
         (os_dx_bot_skill
            {set $dx_slider_item_selected TRUE}
            {instruments.sld store}
            {instruments.sld set_showing TRUE}
         )
         #define BOT_OD_LIST
         (
            {set $dx_bot_overdrive
               {switch $dx_bot_overdrive
                  (dx_on dx_drain)
                  (dx_drain dx_off)
                  (dx_off dx_on)
               }
            }
         )
         (os_dx_bot_overdrive BOT_OD_LIST)
         (os_dx_bot_overdrive_drain BOT_OD_LIST)
         (os_dx_auto_endgame {set $dx_auto_endgame {! $dx_auto_endgame}})
         #define BOT_ENDUR_LIST
         (
            {set $dx_auto_endurance
               {switch $dx_auto_endurance
               (dx_selected dx_random)
               (dx_random FALSE)
               (FALSE dx_selected)
               }
            }
         )
         (os_auto_endurance_selected BOT_ENDUR_LIST)
         (os_auto_endurance BOT_ENDUR_LIST)
         (os_auto_endurance_random BOT_ENDUR_LIST)
         (os_insta_win {set $dx_insta_win {! $dx_insta_win}})
         (os_dx_bot_1 {set $dx_bot_1 {! $dx_bot_1}})
         (os_dx_bot_2 {set $dx_bot_2 {! $dx_bot_2}})
         (os_dx_bot_3 {set $dx_bot_3 {! $dx_bot_3}})
         (os_dx_bot_4 {set $dx_bot_4 {! $dx_bot_4}})
         (os_dx_bot_5 {set $dx_bot_5 {! $dx_bot_5}})
      )
      (button
         #define BOT_SLIDER_ACT
         (
            {{$this find {$this focus_name}} confirm}
            {{$this find {$this focus_name}} set_showing FALSE}
            {$current_list set_showing TRUE}
            {set $dx_slider_item_selected FALSE}
            {$this set_focus $current_list}
         )
         (kAction_Confirm BOT_SLIDER_ACT)
         (kAction_Cancel BOT_SLIDER_ACT)
      )
      ;(SCROLL_SELECT_MSG {$this on_slider_change $component $user})
      (scroll
         {if {find_elem ("instruments.sld") {$this focus_name}}
            {$this on_slider_change $component $user}
         }
      )
      (cancel
         {leave_dx_settings}
         {$this show_options}
      )
   )
}