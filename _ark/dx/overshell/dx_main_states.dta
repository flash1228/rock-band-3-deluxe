   (dxState_DeluxeSettings
      (view
         {if_else {$this in_game}
            os_track_speeds
            os_set_speeds
         }
         os_venue_options
         os_track_theme
         os_features
         os_advanced
         ;only show the controller menu when not in-game and only on applicable instruments or when faking is active
         {if_else {&& {session_mgr is_local} {! {session is_in_game}}} ;prevents soft-lock, swapping instrument type in-game would prevent player from rejoining
            os_controller
            0
         }
      )
      (select
         (os_set_speeds
            {dx_state dxState_SetSpeeds}
         )
         (os_track_speeds
            {dx_state dxState_TrackSpeeds}
         )
         (os_venue_options {dx_state dxState_VenueOptions})
         (os_track_theme {dx_state #ifdef HX_WII dxState_TextureMenu #else dxState_TrackThemeLoader #endif})
         (os_features {dx_state dxState_InGameFeatures})
         (os_advanced {dx_state dxState_Advanced})
         (os_controller {dx_state dxState_ControllerMenu})
      )
      (cancel
         {do
            ($options {array 0})
            {if_else $dx_prompt_save
               {dx_state dxState_SaveWarn}
               {if_else $dx_settings_error
                  {dx_state dxState_SaveWarnError}
                  {do
                     {dx_settings_dta_writer}
                     {leave_dx_settings}
                     {$this show_game_options}
                  }
               }
            }
         }
      )
   )

   (dxState_AudioSFX
      (view
         os_toggle_synth
         {switch $dx_selected_guitar_fx
            (0 os_cyclefx_chorus) (1 os_cyclefx_wah) (2 os_cyclefx_flanger)
            (3 os_cyclefx_delay) (4 os_cyclefx_none) (5 os_cyclefx_do_nothing)
         }
         {if_else $dx_whammy_fx os_whammy_fx_on os_whammy_fx_off}
         os_sfx
      )
      (select
         (os_sfx {dx_state dxState_TheSFX})
         (os_whammy_fx {set $dx_whammy_fx {! $dx_whammy_fx}})
         #define CYCLE_MSG
         (
            {++ $dx_selected_guitar_fx} ;unrolling the cycle_guitar_fx function to track it separately from the real variable
            {if {== $dx_selected_guitar_fx 6} {set $dx_selected_guitar_fx 0}}
            ;{dx_passive_messenger_symbol {sprintf "Guitar FX set to %s" {elem (wah flanger delay chorus none) $dx_selected_guitar_fx}}}
            {if_else {>= $dx_selected_guitar_fx 5}
               {set $test_guitar_fx 4}
               {set $test_guitar_fx $dx_selected_guitar_fx}
            }
         )
         (os_cyclefx_wah CYCLE_MSG)
         (os_cyclefx_flanger CYCLE_MSG)
         (os_cyclefx_delay CYCLE_MSG)
         (os_cyclefx_chorus CYCLE_MSG)
         (os_cyclefx_none CYCLE_MSG)
         (os_cyclefx_do_nothing CYCLE_MSG)
         (os_toggle_synth
            {toggle_instrument_synth}
            {change_instrument_synth_volume 127}
         )
      )
      (cancel
         {dx_state dxState_InGameFeatures}
      )
   )

   (dxState_TheSFX
      (view
         {if_else $dx_song_select_noise os_audio_ambience_on os_audio_ambience_off}
         {if_else $dx_scroll_sound os_scroll_sound_on os_scroll_sound_off}
         {if_else $dx_instrument_fx os_audio_instsfx_on os_audio_instsfx_off}
         {if_else $dx_jurgen_sound os_jurgen_sound_on os_jurgen_sound_off}
         {if_else $dx_nice_sound os_nice_sound_on os_nice_sound_off}
      )
      (select
         (os_jurgen_sound {set $dx_jurgen_sound {! $dx_jurgen_sound}})
         (os_audio_ambience {set $dx_song_select_noise {! $dx_song_select_noise}})
         (os_scroll_sound {set $dx_scroll_sound {! $dx_scroll_sound}})
         (os_audio_instsfx {set $dx_instrument_fx {! $dx_instrument_fx}})
         (os_nice_sound {set $dx_nice_sound {! $dx_nice_sound}})
      )
      (cancel
         {dx_state dxState_AudioSFX}
      )
   )

   (dxState_FullComboSFX
      (view
         os_none
         os_none
         os_none
         os_none
         os_none
         os_none
         os_none
      )
      (message {sprintf {localize current_fc} {localize $dx_fullcombo_sound}})
      (enter
         {do
            ($list_temp {array 0})
            {push_back $list_temp "goul-nug_fc"}
            {push_back $list_temp os_none}
            {foreach $entry {file_list "sfx/streams/fc/*.mogg"} {if {&& {!= $entry ""} {!= $entry "goul-nug_fc"}}  {push_back $list_temp $entry}}}
            {$current_list set_data $list_temp}
            {choose_char.grp set_showing TRUE}
            {chars.lst set_showing FALSE}
            {chars.sbd set_showing TRUE}
            {chars.sbd set scrollbar_list $current_list}
            ;stolen from dx_state func, manually set selected last picked sound
            {if {find_exists $dx_state_tracker $this_state}
               {do
                  ($data 0)
                  {foreach $entry $dx_state_tracker
                     {if {== {elem $entry 0} $this_state}
                        {set $data {elem $entry 1}}
                     }
                  }
                  {foreach $entry $list_temp
                     {if {has_substr $entry $data}
                        {$current_list set_selected $entry}
                     }
                  }
               }
            }
            {$current_list refresh}
         }
      )
      (select
         (os_none {set $dx_fullcombo_sound dx_none})
         (_fallthrough
            {do
               {set $dx_fullcombo_sound {$component selected_sym}}
               {if_else {exists fc_preview_clip}
                  {do
                     {delete fc_preview_clip}
                     {new MoggClip fc_preview_clip}
                  }
                  {new MoggClip fc_preview_clip}
               }
               {fc_preview_clip set file {sprint "sfx/streams/fc/" $dx_fullcombo_sound ".mogg"}}
               {fc_preview_clip set loop FALSE}
               {fc_preview_clip set volume -8}
               {fc_preview_clip play}
            }
         )
      )
      (cancel
         {dx_state dxState_FullCombo}
      )
   )

   (dxState_CalibrationInGame
      (view
         {sprintf {localize os_calibrate_video} {int {floor {'+' 0.5 {profile_mgr get_excess_video_lag}}}}}
         {sprintf {localize os_calibrate_audio} {int {floor {'+' 0.5 {profile_mgr get_excess_audio_lag}}}}}
         overshell_calibration
      )
      (enter
         {set $linoscal TRUE}
         {if {exists beatmatch}
            {beatmatch set_overshell_pause FALSE}
         }
         {$this iterate Mesh $m {$m set_showing FALSE}}
         {$this iterate UIList $l
            {$l set_local_pos_index 0 {+ {$l get_local_pos_index 0} 200}}
            {$l set_local_pos_index 2 {+ {$l get_local_pos_index 2} 250}}
         }
      )
      (button
         #define CALIB_LIST
         (
            {switch {$current_list selected_data}
               (0
                  {set $dx_calibration_mode video}
                  {dx_state dxState_CalibrationInGameSetting}
               )
               (1
                  {set $dx_calibration_mode audio}
                  {dx_state dxState_CalibrationInGameSetting}
               )
               (2
                  {set $linoscal FALSE}
                  {set $dx_reset_average_jdj FALSE}
                  {$this iterate Mesh $m {$m set_showing TRUE}}
                  {$this iterate UIList $l
                     {$l set_local_pos_index 0 {- {$l get_local_pos_index 0} 200}}
                     {$l set_local_pos_index 2 {- {$l get_local_pos_index 2} 250}}
                  }
                  {$this show_enter_calibration} ;enter vanilla calibration screen
               )
            }
         )
         (kAction_Confirm CALIB_LIST)
      )
      (cancel
         {set $linoscal FALSE}
         {set $dx_reset_average_jdj FALSE}
         {if {exists beatmatch}
            {beatmatch set_overshell_pause {|| {modifier_mgr is_modifier_active mod_nopause} {modifier_mgr is_modifier_active mod_fakejuke}}}
         }
         {$this iterate Mesh $m {$m set_showing TRUE}}
         {$this iterate UIList $l
            {$l set_local_pos_index 0 {- {$l get_local_pos_index 0} 200}}
            {$l set_local_pos_index 2 {- {$l get_local_pos_index 2} 250}}
         }
         {$this show_options_av_settings}
      )
   )

   (dxState_CalibrationInGameSetting
      (view
         {if_else {== $dx_calibration_mode video} {sprintf {localize os_calibrate_video_setting} {int {floor {'+' 0.5 {profile_mgr get_excess_video_lag}}}}} os_blnk}
         {if_else {== $dx_calibration_mode audio} {sprintf {localize os_calibrate_audio_setting} {int {floor {'+' 0.5 {profile_mgr get_excess_audio_lag}}}}} os_blnk}
         os_exit_cal_one ;message telling user to press start to exit
         os_exit_cal_two
      )
      (scroll_disabled)
      (enter
         {$current_list set_selected 0}
         {set $dx_list_item_selected TRUE}
      )
      (select
         (os_exit_cal_one
            {set $dx_list_item_selected FALSE}
            {dx_state dxState_CalibrationInGame}
         )
         (os_exit_cal_two
            {set $dx_list_item_selected FALSE}
            {dx_state dxState_CalibrationInGame}
         )
      )
      (button
         #define CALIB_LEFT
         (
            ;grab current calibration number
            {set $i
               {switch $dx_calibration_mode
                  (video {int {floor {'+' 0.5 {profile_mgr get_excess_video_lag}}}})
                  (audio {int {floor {'+' 0.5 {profile_mgr get_excess_audio_lag}}}})
                  0
               }
            }
            ;add -1 or +1 when pressing left/right dpad
            {set $i
               {switch $action
                  (kAction_Left {- $i 1})
                  (kAction_Right {+ $i 1})
               }
            }
            ;limit calibration from -300 to 300
            {if {> $i 300} {set $i 300}}
            {if {< $i -300} {set $i -300}}
            ;set new calibration number
            {switch $dx_calibration_mode
               (video {profile_mgr set_excess_video_lag $i})
               (audio {profile_mgr set_excess_audio_lag $i})
               kDataUnhandled
            }
            ;reset average for judgments
            {set $dx_reset_average_jdj TRUE}
            {unless {beatmatch is_invalid_score}
               {beatmatch set_invalid_score TRUE}
               {foreach_int $i 0 4 ;super jank way of setting score to 0 and disabling scoring
                  {cheat_toggle_difficulty}
               }
            }
         )
         (kAction_Left CALIB_LEFT)
         (kAction_Right CALIB_LEFT)
         (kAction_Up kDataUnhandled)
         (kAction_Down kDataUnhandled)
         (kAction_Confirm kDataUnhandled)
         (kAction_Cancel kDataUnhandled)
         ;pressing start will exit menu to allow user to continue playing with normal frets while calibrating
         (kAction_Start
            {set $dx_list_item_selected FALSE}
            {$this iterate Mesh $m {$m set_showing TRUE}}
            {$this iterate UIList $l
               {$l set_local_pos_index 0 {- {$l get_local_pos_index 0} 200}}
               {$l set_local_pos_index 2 {- {$l get_local_pos_index 2} 250}}
            }
            {dx_state dxState_CalibrationInGame}
         )
      )
      (cancel
         {$this iterate Mesh $m {$m set_showing TRUE}}
         {$this iterate UIList $l
            {$l set_local_pos_index 0 {- {$l get_local_pos_index 0} 200}}
            {$l set_local_pos_index 2 {- {$l get_local_pos_index 2} 250}}
         }
         {dx_state dxState_CalibrationInGame}
      )
   )

   (dxState_AngleMenu
      (view
         os_noang
         os_angmult
         {if_else $dx_allow_lower_angle os_allow_lower_ang_on os_allow_lower_ang_off}
      )
      (enter
         {set $dx_slider TRUE}
         {set $dx_slider_id dx_trackangle}
         {instruments.sld set_num_steps 16} ;number of steps for track angle slider
         {instruments.sld set_current {int {/ {- $dx_multiangle 1} {/ 3 15}}}}
         {set $in_slider_state TRUE}
         {if $dx_slider_item_selected
            {$current_list set_showing FALSE}
            {$this set_focus instruments.sld}
         }
      )
      (update_view {handle ($this update_slider instruments.sld "")})
      (select
         (os_noang
            {set $dx_use_multiangle FALSE}
            {set $dx_multiangle 1}
            {instruments.sld set_current {int {/ {- $dx_multiangle 1} {/ 3 15}}}}
         )
         (os_angmult
            {set $dx_slider_item_selected TRUE}
            {set $dx_use_multiangle TRUE}
            {instruments.sld store}
            {instruments.sld set_showing TRUE}
         )
         (os_allow_lower_ang {set $dx_allow_lower_angle {! $dx_allow_lower_angle}})
      )
      (button
         #define ANGLE_SLIDER_ACT
         (
            {{$this find {$this focus_name}} confirm}
            {{$this find {$this focus_name}} set_showing FALSE}
            {$current_list set_showing TRUE}
            {set $dx_slider_item_selected FALSE}
            {$this set_focus $current_list}
            {dx_state dxState_TrackAngleSliderMsg}
         )
         (kAction_Confirm ANGLE_SLIDER_ACT)
         (kAction_Cancel ANGLE_SLIDER_ACT)
      )
      ;(SCROLL_SELECT_MSG {$this on_slider_change $component $user})
      (scroll
         {if {find_elem ("instruments.sld") {$this focus_name}}
            {$this on_slider_change $component $user}
         }
      )
      (cancel
         {set $dx_slider FALSE}
         {set $in_slider_state FALSE}
         {dx_track_angle_var_reset}
         {dx_state dxState_HighwayTheme}
      )
   )